/*
 * Just run "gradle" from the command line and the script will package of the build into a zip file in the build
 * directory.
 */
apply plugin: 'java'

defaultTasks 'clean', 'buildRowbot'

def targetDir = "build/rowbot"

def getVersionName = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'describe', '--tags', '--long'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

repositories {
    flatDir {
       dirs 'jars'
   }
}

dependencies {
	compile name: 'marklogic-xcc-8.0.5'
	compile name: 'org.json'
	compile name: 'ojdbc6'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/java/com/marklogic/rowbot']
		}
	}
}

jar {
	manifest {
		attributes 'Main-Class': 'com.marklogic.rowbot.RowBot'
	}
}

compileJava() {
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
	if (System.env.JDK7_HOME != null) {
		options.bootClasspath = "$System.env.JDK7_HOME/jre/lib/rt.jar"	
	}
}

task copyProjectToBuildDir(type: Copy, dependsOn: build) {
	from 'project/'
	into targetDir
}

//create a single Jar with all dependencies
task fatJar(type: Jar, dependsOn: copyProjectToBuildDir) {
	destinationDir = file('build/dist')
	manifest {
        attributes 'Implementation-Title': 'RowBot Executable Jar',
        	'Implementation-Version': '1.0',
        	'Main-Class': 'com.marklogic.rowbot.RowBot'
    }
    baseName = 'rowbot-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task buildRowbot(type: Delete, dependsOn: fatJar) {
	delete 'build/tmp', 'build/classes', 'build/dependency-cache', 'build/libs'
}